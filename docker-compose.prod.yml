version: "3.8"

services:
  mysql-prod:
    image: mysql:8.0
    container_name: mysql-prod
    env_file:
      - .env.prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./01-init.sql:/docker-entrypoint-initdb.d/01-init.sql
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 30s

  flask-app-prod:
    image: laksh1929/geeksprofile-app:latest
    container_name: flask-app-prod
    env_file:
      - .env.prod
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: production
      SECRET_KEY: ${SECRET_KEY}
      MYSQL_HOST: mysql-prod
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_PORT: 3306
    depends_on:
      mysql-prod:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mysql_prod_data:

networks:
  app-network:
    driver: bridge